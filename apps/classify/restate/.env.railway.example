# ============================================================================
# Railway Environment Variables Template
# ============================================================================
#
# Copy this file and add values in Railway Dashboard:
# Project → Service → Variables → Add Variable
#
# Railway supports cross-service references: ${{service-name.VARIABLE}}
# ============================================================================

# ----------------------------------------------------------------------------
# SERVICE CONFIGURATION
# ----------------------------------------------------------------------------
PORT=9080
HOST=0.0.0.0
NODE_ENV=production

# ----------------------------------------------------------------------------
# DATABASE (PostgreSQL/TimescaleDB)
# ----------------------------------------------------------------------------
# Option 1: Reference Railway PostgreSQL Plugin
POSTGRES_HOST=${{Postgres.PGHOST}}
POSTGRES_PORT=${{Postgres.PGPORT}}
POSTGRES_DB=${{Postgres.PGDATABASE}}
POSTGRES_USER=${{Postgres.PGUSER}}
POSTGRES_PASSWORD=${{Postgres.PGPASSWORD}}
DATABASE_URL=${{Postgres.DATABASE_URL}}

# Option 2: Reference Custom TimescaleDB Service
# POSTGRES_HOST=${{timescaledb.PGHOST}}
# POSTGRES_PORT=${{timescaledb.PGPORT}}
# POSTGRES_DB=${{timescaledb.PGDATABASE}}
# POSTGRES_USER=${{timescaledb.PGUSER}}
# POSTGRES_PASSWORD=${{timescaledb.PGPASSWORD}}
# DATABASE_URL=${{timescaledb.DATABASE_URL}}

# Option 3: Manual Configuration
# POSTGRES_HOST=timescaledb.railway.internal
# POSTGRES_PORT=5432
# POSTGRES_DB=classify
# POSTGRES_USER=classify
# POSTGRES_PASSWORD=<YOUR_SECURE_PASSWORD>
# DATABASE_URL=postgresql://classify:<PASSWORD>@timescaledb.railway.internal:5432/classify

# ----------------------------------------------------------------------------
# OPENAI API (Required)
# ----------------------------------------------------------------------------
OPENAI_API_KEY=sk-proj-YOUR_KEY_HERE
OPENAI_MODEL=gpt-4o-mini

# Alternative models:
# OPENAI_MODEL=gpt-4o              # More accurate, slower
# OPENAI_MODEL=gpt-4o-mini         # Faster, cheaper (recommended)
# OPENAI_MODEL=gpt-3.5-turbo       # Cheapest, less accurate

# ----------------------------------------------------------------------------
# ANTHROPIC API (Optional - for consensus review)
# ----------------------------------------------------------------------------
ANTHROPIC_API_KEY=sk-ant-YOUR_KEY_HERE
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# Alternative models:
# ANTHROPIC_MODEL=claude-3-5-sonnet-20241022    # Recommended
# ANTHROPIC_MODEL=claude-3-opus-20240229        # Most capable
# ANTHROPIC_MODEL=claude-3-haiku-20240307       # Fastest, cheapest

# ----------------------------------------------------------------------------
# LM STUDIO (Optional - for local/self-hosted LLM)
# ----------------------------------------------------------------------------
# LM_STUDIO_BASE_URL=http://localhost:1234/v1
# LM_STUDIO_MODEL=mistral-7b-instruct-v0.3

# ----------------------------------------------------------------------------
# RESTATE CONFIGURATION
# ----------------------------------------------------------------------------
# Reference Restate service running on Railway
RESTATE_ADMIN_URL=${{restate-server.RAILWAY_PUBLIC_DOMAIN}}:9070
RESTATE_INGRESS_URL=${{restate-server.RAILWAY_PUBLIC_DOMAIN}}:8080

# Or use Railway internal networking (more secure)
# RESTATE_ADMIN_URL=http://restate-server.railway.internal:9070
# RESTATE_INGRESS_URL=http://restate-server.railway.internal:8080

# ----------------------------------------------------------------------------
# PIPELINE CONFIGURATION
# ----------------------------------------------------------------------------
PIPELINE_VERSION=2.0.0

# Rate limiting (requests per minute)
# Adjust based on your OpenAI tier:
# - Tier 1: 500 RPM
# - Tier 2: 5,000 RPM
# - Tier 3: 10,000 RPM
# - Tier 4: 30,000 RPM
DEFAULT_RPM=500

# Batch sizes
BATCH_SIZE=100
MAX_CONCURRENT_WORKFLOWS=50

# ----------------------------------------------------------------------------
# MONITORING & LOGGING
# ----------------------------------------------------------------------------
LOG_LEVEL=info
# Options: debug, info, warn, error

# Sentry (Optional - for error tracking)
# SENTRY_DSN=https://your-sentry-dsn
# SENTRY_ENVIRONMENT=production

# ----------------------------------------------------------------------------
# FEATURE FLAGS (Optional)
# ----------------------------------------------------------------------------
# Enable/disable specific workflows
ENABLE_CLASSIFICATION=true
ENABLE_DATA_QUALITY=true
ENABLE_CONSENSUS_ANALYSIS=true

# Enable experimental features
# ENABLE_AUTO_RETRY=true
# ENABLE_CACHE=true
# CACHE_TTL=3600

# ----------------------------------------------------------------------------
# SECURITY (Optional)
# ----------------------------------------------------------------------------
# API authentication (if implementing auth)
# API_SECRET_KEY=<GENERATE_RANDOM_KEY>
# JWT_SECRET=<GENERATE_RANDOM_KEY>

# Allowed origins for CORS
# ALLOWED_ORIGINS=https://your-frontend.com,https://dashboard.tellimer.com

# ----------------------------------------------------------------------------
# NOTES FOR RAILWAY DEPLOYMENT
# ----------------------------------------------------------------------------
#
# 1. Railway Variable References:
#    Use ${{service-name.VARIABLE}} to reference other services
#
# 2. Automatic SSL:
#    Railway provides free SSL for all domains
#
# 3. Private Networking:
#    Use .railway.internal for inter-service communication
#
# 4. Secrets Encryption:
#    All variables are encrypted at rest
#
# 5. Generate Secure Passwords:
#    openssl rand -base64 32
#
# 6. Test Configuration:
#    railway run env | grep POSTGRES
#
# ============================================================================
