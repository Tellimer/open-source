{
  "name": "@tellimer/classify-restate",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "module": "src/index.ts",
  "scripts": {
    "dev": "bun run src/index.ts",
    "dev:watch": "bun --watch src/index.ts",
    "dev:local": "npm-run-all --parallel dev restate:server:delayed dev:register",
    "dev:local:ultra": "ulimit -n 10240 && npm-run-all --parallel dev:watch restate:server:delayed dev:register",
    "restate:server": "RESTATE_WORKER__INVOKER__INACTIVITY_TIMEOUT=5m RESTATE_WORKER__INVOKER__ABORT_TIMEOUT=5m restate-server --config-file restate.toml",
    "restate:server:delayed": "sleep 2 && RESTATE_WORKER__INVOKER__INACTIVITY_TIMEOUT=5m RESTATE_WORKER__INVOKER__ABORT_TIMEOUT=5m restate-server --config-file restate.toml",
    "dev:register": "sleep 5 && curl -X POST http://localhost:9070/deployments -H 'content-type: application/json' -d '{\"uri\": \"http://localhost:9080\"}'",
    "reregister": "curl -X POST http://localhost:9070/deployments -H 'content-type: application/json' -d '{\"uri\": \"http://localhost:9080\"}'",
    "start": "bun run src/index.ts",
    "test": "bun test",
    "db:migrate": "bun run src/db/migrations/run.ts",
    "db:init": "bun run src/db/init.ts",
    "db:seed": "bun run src/scripts/seed-database.ts",
    "timeseries:ingest": "bun run src/scripts/ingest-time-series.ts",
    "timeseries:get": "curl -X POST http://localhost:8080/time-series-api/get -H 'Content-Type: application/json' -d",
    "timeseries:stats": "curl -X POST http://localhost:8080/time-series-api/stats -H 'Content-Type: application/json' -d",
    "timeseries:upload": "curl -X POST http://localhost:8080/time-series-api/upload -H 'Content-Type: application/json' -d",
    "timeseries:delete": "curl -X POST http://localhost:8080/time-series-api/delete -H 'Content-Type: application/json' -d",
    "classify": "bun run src/scripts/classify-indicators.ts",
    "classify:safe": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 150",
    "classify:fast": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 300",
    "classify:max": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 480",
    "classify:ultra": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 5000",
    "classify:turbo": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 10000",
    "classify:cluster": "bun run src/scripts/classify-cluster.ts --openai --rpm=400",
    "classify:cluster:fast": "bun run src/scripts/classify-cluster.ts --openai --rpm=400",
    "classify:cluster:max": "bun run src/scripts/classify-cluster.ts --openai --rpm=600",
    "classify:cluster:ultra": "bun run src/scripts/classify-cluster.ts --openai --rpm=800",
    "reclassify:safe": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 150 --force",
    "reclassify:fast": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 300 --force",
    "reclassify:ultra": "bun run src/scripts/classify-indicators-throttled.ts --openai --rpm 5000 --force",
    "stats": "bun run src/scripts/batch-stats.ts",
    "stats:30m": "bun run src/scripts/batch-stats.ts --minutes 30",
    "stats:today": "bun run src/scripts/batch-stats.ts --minutes 1440",
    "queue": "bun run src/scripts/check-queue.ts",
    "kill": "bun run src/scripts/kill-all.ts",
    "clean": "bun run src/scripts/kill-all.ts --clean",
    "cluster:start": "bun run src/scripts/start-cluster.ts start",
    "cluster:stop": "bun run src/scripts/start-cluster.ts stop",
    "cluster:clean": "bun run src/scripts/start-cluster.ts clean",
    "cluster:logs": "docker-compose -f docker-compose.cluster.yml logs -f",
    "cluster:ps": "docker-compose -f docker-compose.cluster.yml ps",
    "all-in-one": "bun run src/scripts/cluster-all-in-one.ts --rpm=1000",
    "all-in-one:conservative": "bun run src/scripts/cluster-all-in-one.ts --rpm=750",
    "all-in-one:normal": "bun run src/scripts/cluster-all-in-one.ts --rpm=1000",
    "all-in-one:fast": "bun run src/scripts/cluster-all-in-one.ts --rpm=1250",
    "all-in-one:ultra": "bun run src/scripts/cluster-all-in-one.ts --rpm=1500",
    "cluster:5node": "docker-compose -f docker-compose.cluster.yml up -d",
    "generate:cluster": "bun run scripts/generate-compose.ts",
    "generate:cluster:10": "bun run scripts/generate-compose.ts --nodes=5 --services=10",
    "generate:cluster:20": "bun run scripts/generate-compose.ts --nodes=5 --services=20",
    "generate:cluster:mega": "bun run scripts/generate-compose.ts --nodes=10 --services=20",
    "cluster:start:10": "bun run generate:cluster:10 && bun run cluster:start",
    "cluster:start:20": "bun run generate:cluster:20 && bun run cluster:start",
    "cluster:start:mega": "bun run generate:cluster:mega && bun run cluster:start",
    "all-in-one:10": "bun run generate:cluster:10 && bun run src/scripts/cluster-all-in-one.ts",
    "all-in-one:20": "bun run generate:cluster:20 && bun run src/scripts/cluster-all-in-one.ts",
    "all-in-one:mega": "bun run generate:cluster:mega && bun run src/scripts/cluster-all-in-one.ts",
    "quality:check": "curl -X POST http://localhost:8080/data-quality-api/check-all -H 'Content-Type: application/json'",
    "quality:check:batch": "curl -X POST http://localhost:8080/data-quality-api/check -H 'Content-Type: application/json' -d '{\"indicator_ids\": []}'",
    "quality:report": "curl http://localhost:8080/data-quality-api/report/",
    "quality:issues": "curl 'http://localhost:8080/data-quality-api/issues?status=major_issues'",
    "quality:issues:critical": "curl 'http://localhost:8080/data-quality-api/issues?severity=5'",
    "consensus:analyze": "curl -X POST http://localhost:8080/consensus-analysis-api/analyze-all -H 'Content-Type: application/json'",
    "consensus:analyze:batch": "curl -X POST http://localhost:8080/consensus-analysis-api/analyze -H 'Content-Type: application/json' -d '{\"indicator_names\": []}'",
    "consensus:report": "curl http://localhost:8080/consensus-analysis-api/report/",
    "consensus:issues": "curl 'http://localhost:8080/consensus-analysis-api/issues?status=inconsistent'",
    "consensus:outliers": "curl http://localhost:8080/consensus-analysis-api/outliers/",
    "final:migrate": "bun run src/scripts/migrate-to-final-indicators.ts",
    "final:migrate:force": "bun run src/scripts/migrate-to-final-indicators.ts --force",
    "final:list": "curl 'http://localhost:8080/final-indicators-api/list?limit=10'",
    "final:production": "curl 'http://localhost:8080/final-indicators-api/production-ready?limit=100'",
    "final:attention": "curl http://localhost:8080/final-indicators-api/requires-attention",
    "final:stats": "curl http://localhost:8080/final-indicators-api/stats",
    "pipeline:full": "bun run classify && bun run quality:check && bun run consensus:analyze && bun run final:migrate",
    "pipeline:full:force": "bun run reclassify:ultra && bun run quality:check && bun run consensus:analyze && bun run final:migrate:force"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.0.0",
    "@ai-sdk/openai": "^1.0.0",
    "@restatedev/restate-sdk": "^1.4.1",
    "ai": "^4.0.0",
    "openai": "^6.6.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@restatedev/restate-server": "^1.1.1",
    "@types/bun": "latest",
    "@types/js-yaml": "^4.0.9",
    "bun-types": "latest",
    "js-yaml": "^4.1.0",
    "npm-run-all": "^4.1.5"
  },
  "peerDependencies": {
    "typescript": "^5"
  }
}
