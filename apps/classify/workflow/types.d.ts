/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'NormalizeIndicator': EventHandler<{ indicator_id: string; name: string; units?: string; description?: string; periodicity?: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; scale?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.infer-time'; data: { indicator_id: string; name: string; description?: string; units?: string; periodicity?: string; sample_values?: Array<{ date: string; value: number }>; parsed_scale: string; parsed_unit_type: string; parsed_currency: unknown; scale: string; is_currency: boolean; detected_currency: unknown; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'FinalReview': EventHandler<{ indicator_id: string; name: string; incorrect_fields: Array<string>; review_reasoning: string; current_values: Record<string, unknown>; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.complete'; data: { indicator_id: string; name: string; review_status: 'passed' | 'corrected' | 'failed'; corrections?: Record<string, unknown> } }>
    'CompleteClassify': EventHandler<{ indicator_id: string; name: string; review_status: 'passed' | 'corrected' | 'failed'; corrections?: Record<string, unknown> }, never>
    'RouteByUnitType': EventHandler<{ indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; parsed_unit_type: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.assign-family-non-currency'; data: { indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; parsed_unit_type: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'CurrencyDenominationRouter': EventHandler<{ indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; scale: string; is_currency: boolean; detected_currency: unknown; parsed_unit_type: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.assign-family-currency'; data: { indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } } | { topic: 'indicator.route-by-unit-type'; data: { indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; parsed_unit_type: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'AssignFamilyNonCurrency': EventHandler<{ indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; parsed_unit_type: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.classify-type-non-currency'; data: { indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; family: string; parsed_unit_type?: string; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; topic?: string; aggregation_method?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'ClassifyTypeNonCurrency': EventHandler<{ indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; family: string; parsed_unit_type?: string; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; topic?: string; aggregation_method?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.complete'; data: { indicator_id: string; name: string; review_status: 'passed' | 'corrected' | 'failed'; corrections?: Record<string, unknown> } }>
    'InferTimeBasisAndCumulativePattern': EventHandler<{ indicator_id: string; name: string; description?: string; units?: string; periodicity?: string; sample_values?: Array<{ date: string; value: number }>; parsed_scale: string; parsed_unit_type: string; parsed_currency: unknown; scale: string; is_currency: boolean; detected_currency: unknown; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.time-cumulative-complete'; data: { indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; scale: string; is_currency: boolean; detected_currency: unknown; parsed_unit_type: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'BooleanReview': EventHandler<{ indicator_id: string; name: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; family: string; indicator_type: string; temporal_aggregation: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.final-review'; data: { indicator_id: string; name: string; incorrect_fields: Array<string>; review_reasoning: string; current_values: Record<string, unknown>; llm_provider?: 'local' | 'openai' | 'anthropic' } } | { topic: 'indicator.complete'; data: { indicator_id: string; name: string; review_status: 'passed' | 'corrected' | 'failed'; corrections?: Record<string, unknown> } }>
    'StartClassify': ApiRouteHandler<{ indicators: Array<{ indicator_id: string; name: string; units?: string; description?: string; periodicity?: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; source_url?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; scale?: string; topic?: string; currency_code?: string }>; llm_provider?: 'local' | 'openai' | 'anthropic' }, ApiResponse<202, { message: string; count: number; trace_id: string }>, { topic: 'indicator.normalize'; data: { indicator_id: string; name: string; units?: string; description?: string; periodicity?: string; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; scale?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'AssignFamilyCurrency': EventHandler<{ indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; aggregation_method?: string; topic?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.classify-type-currency'; data: { indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; family: string; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; topic?: string; aggregation_method?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' } }>
    'ClassifyTypeCurrency': EventHandler<{ indicator_id: string; name: string; description?: string; time_basis: string; reporting_frequency: string; scale: string; is_currency: boolean; detected_currency: unknown; family: string; is_cumulative?: boolean; cumulative_pattern_type?: string; cumulative_confidence?: number; sample_values?: Array<{ date: string; value: number }>; source_name?: string; long_name?: string; category_group?: string; dataset?: string; topic?: string; aggregation_method?: string; currency_code?: string; llm_provider?: 'local' | 'openai' | 'anthropic' }, { topic: 'indicator.complete'; data: { indicator_id: string; name: string; review_status: 'passed' | 'corrected' | 'failed'; corrections?: Record<string, unknown> } }>
    'Health': ApiRouteHandler<Record<string, unknown>, ApiResponse<200, { status: string; timestamp: string; service: string }>, never>
  }
}